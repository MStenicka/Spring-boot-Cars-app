plugins {
	id 'java'
	id 'org.asciidoctor.convert' version '1.5.9.2'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'mysql:mysql-connector-java:8.0.31'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.20.0'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.13.0'
	implementation 'com.github.therapi:therapi-runtime-javadoc:0.13.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
	testImplementation 'org.mockito:mockito-core:4.11.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

javadoc {
	options.addStringOption('Xdoclint:none', '-quiet')
	options.addStringOption('encoding', 'UTF-8')
}
